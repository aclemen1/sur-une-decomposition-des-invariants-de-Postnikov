\ifx\indiplome\undefined	\message{Local mode compiling…}	\documentclass[titlepage,10pt,a4paper]{article}	\input :::Arsenal:Arsenal	\begin{document}\fi%*******************************************************************************%===============================================================================\bigskip\subsection{Connexité}\bigskip%===============================================================================\begin{definition}\index{connexe}Soit $X$ un espace topologique. $X$ est {\em connexe} s'il n'est pas réuniondisjointe de deux ouverts non vides.\end{definition}\begin{definition}\index{$n$-connexe}\index{connexe!par arcs}Soit $X$ un espace topologique. $X$ est {\em $n$-connexe}, avec $n$ un entier,si$\pi_i(X)=0$ pour tout entier $0 \leq i \leq n$. Si $X$ est $0$-connexe on ditaussi qu'il est {\em connexe par arcs}.\end{definition}\begin{proposition}\label{p:connexite_P1}Soit $X$ un espace topologique. Si $X$ est connexe par arcs alors $X$ estconnexe.\end{proposition}\begin{proof}\cf \cite[Theorem 1.14, p.25]{Rotman}.\end{proof}\begin{remark}La réciproque est fausse, par exemple, le très célèbre espace $y=\sin({1 \overx})$ est connexe mais pas connexe par arcs (\cf \cite[Example 1.8,p.25]{Rotman}).\end{remark}\begin{definition}\index{$n$-anticonnexe}\index{contractible}\index{type d'homotopie!d'un point}Soit $X$ un espace topologique. $X$ est {\em $n$-anticonnexe}, avec $n$ unentier, si$\pi_i(X)=0$ pour tout entier $i \geq n$. Si $X$ est $0$-anticonnexe on ditaussi qu'il est {\em contractible} ou qu'il a le {\em type d'homotopie d'unpoint}.\end{definition}%\begin{proposition}%Soit $X$ un espace topologique. Si $X$ est contractible alors $X$ est connexe.%\end{proposition}%%\begin{proof}%Si $X$ est contractible, alors $X$ est $0$-connexe, donc connexe par la%Proposition \ref{p:connexite_P1}.%\end{proof}%*******************************************************************************\ifx\indiplome\undefined	\end{document}\fi\endinput